{"ast":null,"code":"var _jsxFileName = \"/Users/mdv/Documents/programming/HenHack25/UDelaWhere/src/components/Game.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup, useMap, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport styled, { keyframes } from 'styled-components';\nimport L from 'leaflet';\nimport ImageViewer360 from './ImageViewer360';\nimport locationsData from '../data/locations.json';\n\n// Fix for default marker icons in React-Leaflet\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst fadeIn = keyframes`\n  from { opacity: 0; }\n  to { opacity: 1; }\n`;\nconst slideUp = keyframes`\n  from { transform: translateY(20px); opacity: 0; }\n  to { transform: translateY(0); opacity: 1; }\n`;\nconst Button = styled.button`\n  padding: 16px 40px;\n  background: #FFD200;\n  color: #00539F;\n  border: none;\n  border-radius: 30px;\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 700;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  box-shadow: 0 4px 20px rgba(255, 210, 0, 0.3);\n\n  &:hover:not(:disabled) {\n    background: #FFE04C;\n    transform: translateY(-2px);\n    box-shadow: 0 8px 30px rgba(255, 210, 0, 0.4);\n  }\n\n  &:disabled {\n    background: rgba(255, 255, 255, 0.1);\n    color: rgba(255, 255, 255, 0.4);\n    cursor: not-allowed;\n    transform: none;\n    box-shadow: none;\n  }\n`;\n_c = Button;\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: #001B3D;\n  color: white;\n  font-family: 'Proxima Nova', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n  position: relative;\n`;\n_c2 = GameContainer;\nconst Timer = styled.div`\n  position: fixed;\n  top: 100px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(0, 27, 61, 0.85);\n  padding: 15px 30px;\n  border-radius: 20px;\n  border: 2px solid rgba(255, 210, 0, 0.3);\n  backdrop-filter: blur(10px);\n  z-index: 1001;\n  animation: ${fadeIn} 0.5s ease-out;\n  text-align: center;\n  pointer-events: none;\n  \n  .time {\n    font-size: 2.5em;\n    font-weight: 800;\n    color: #FFD200;\n    letter-spacing: 2px;\n    text-shadow: 0 2px 4px rgba(0,0,0,0.3);\n  }\n  \n  .label {\n    font-size: 0.9em;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    opacity: 0.8;\n    margin-bottom: 5px;\n  }\n`;\n_c3 = Timer;\nconst GameStats = styled.div`\n  position: fixed;\n  top: 100px;\n  right: 40px;\n  background: rgba(0, 27, 61, 0.85);\n  padding: 15px 30px;\n  border-radius: 20px;\n  border: 2px solid rgba(255, 210, 0, 0.3);\n  backdrop-filter: blur(10px);\n  z-index: 1001;\n  animation: ${fadeIn} 0.5s ease-out;\n  pointer-events: none;\n\n  .stat {\n    text-align: right;\n    margin: 8px 0;\n  }\n\n  .label {\n    font-size: 0.9em;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    opacity: 0.8;\n  }\n\n  .value {\n    font-size: 1.4em;\n    font-weight: 800;\n    color: #FFD200;\n    letter-spacing: 1px;\n    text-shadow: 0 2px 4px rgba(0,0,0,0.3);\n  }\n`;\n_c4 = GameStats;\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  width: 32px;\n  height: 32px;\n  background: rgba(0, 27, 61, 0.85);\n  border: none;\n  border-radius: 50%;\n  color: white;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  opacity: 0;\n  transform: translateX(20px);\n  transition: all 0.3s ease;\n  z-index: 1002;\n  backdrop-filter: blur(5px);\n\n  &:hover {\n    background: #00539F;\n  }\n`;\n_c5 = CloseButton;\nconst MapWrapper = styled.div`\n  position: fixed;\n  bottom: 40px;\n  right: 40px;\n  width: ${props => {\n  if (props.isExpanded) return 'calc(100% - 80px)';\n  if (props.isSlightlyExpanded) return '750px';\n  return '400px';\n}};\n  height: ${props => {\n  if (props.isExpanded) return 'calc(100vh - 300px)';\n  if (props.isSlightlyExpanded) return '450px';\n  return '250px';\n}};\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  z-index: 1000;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n  transform-origin: bottom right;\n  border: 2px solid ${props => props.isExpanded ? '#FFD200' : 'rgba(255, 210, 0, 0.3)'};\n\n  &:hover:not([data-expanded=\"true\"]) {\n    width: 500px;\n    height: 320px;\n    transform: translateZ(0);\n    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.4);\n  }\n\n  ${CloseButton}, .leaflet-control-zoom {\n    opacity: ${props => props.isExpanded ? 1 : 0};\n    transform: ${props => props.isExpanded ? 'translateX(0)' : 'translateX(20px)'};\n    transition: all 0.3s ease;\n  }\n\n  .leaflet-container {\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n    background: #1a1a1a;\n  }\n\n  .leaflet-control-container {\n    z-index: 2;\n  }\n\n  .leaflet-control-zoom {\n    margin: 15px;\n    \n    a {\n      background: rgba(0, 83, 159, 0.9);\n      color: white;\n      border: none;\n      \n      &:hover {\n        background: #00539F;\n      }\n    }\n  }\n`;\n_c6 = MapWrapper;\nconst ToggleMapSizeButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  background: rgba(0, 0, 0, 0.7);\n  border: none;\n  border-radius: 6px;\n  color: white;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  z-index: 1002;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: rgba(0, 0, 0, 0.9);\n  }\n`;\n_c7 = ToggleMapSizeButton;\nconst ImageViewer = styled.div`\n  flex: 1;\n  background: #000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n  pointer-events: auto;\n\n  &:after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 200px;\n    background: linear-gradient(to top, rgba(0,27,61,0.9) 0%, rgba(0,27,61,0) 100%);\n    pointer-events: none;\n  }\n`;\n_c8 = ImageViewer;\nconst ScoreOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 27, 61, 0.98);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  opacity: ${props => props.isVisible ? 1 : 0};\n  visibility: ${props => props.isVisible ? 'visible' : 'hidden'};\n  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n  z-index: 2000;\n  padding: 40px;\n  backdrop-filter: blur(10px);\n`;\n_c9 = ScoreOverlay;\nconst ResultInfo = styled.div`\n  text-align: center;\n  color: white;\n  margin-bottom: 30px;\n  animation: ${slideUp} 0.5s ease-out;\n\n  h2 {\n    color: #FFD200;\n    font-size: 3em;\n    margin-bottom: 0.5em;\n    font-weight: 800;\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\n  }\n\n  p {\n    font-size: 1.4em;\n    margin: 0.8em 0;\n    opacity: 0.9;\n  }\n`;\n_c10 = ResultInfo;\nconst ResultMapContainer = styled.div`\n  width: 85%;\n  height: 65%;\n  margin: 30px 0;\n  border-radius: 16px;\n  overflow: hidden;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);\n  border: 3px solid #FFD200;\n  animation: ${slideUp} 0.7s ease-out;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 100px;\n    background: linear-gradient(to bottom, rgba(0,83,159,0.4) 0%, rgba(0,83,159,0) 100%);\n    pointer-events: none;\n    z-index: 1;\n  }\n`;\n_c11 = ResultMapContainer;\nconst ScoreText = styled.div`\n  font-size: 3.5em;\n  font-weight: 800;\n  color: #FFD200;\n  margin: 25px 0;\n  text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\n  animation: ${fadeIn} 0.8s ease-out;\n  letter-spacing: 2px;\n`;\n_c12 = ScoreText;\nconst UserModal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 27, 61, 0.98);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  opacity: ${props => props.isVisible ? 1 : 0};\n  visibility: ${props => props.isVisible ? 'visible' : 'hidden'};\n  transition: all 0.3s ease;\n  z-index: 3000;\n  backdrop-filter: blur(10px);\n`;\n_c13 = UserModal;\nconst UserForm = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  padding: 40px;\n  border-radius: 16px;\n  text-align: center;\n  animation: ${fadeIn} 0.5s ease-out;\n  border: 2px solid rgba(255, 210, 0, 0.3);\n  max-width: 400px;\n  width: 90%;\n\n  h2 {\n    color: #FFD200;\n    font-size: 2em;\n    margin-bottom: 1em;\n  }\n\n  p {\n    margin-bottom: 2em;\n    opacity: 0.8;\n    line-height: 1.6;\n  }\n`;\n_c14 = UserForm;\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  margin-bottom: 20px;\n  border: 2px solid rgba(255, 210, 0, 0.3);\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  font-size: 16px;\n  transition: all 0.3s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #FFD200;\n    background: rgba(255, 255, 255, 0.15);\n  }\n\n  &::placeholder {\n    color: rgba(255, 255, 255, 0.5);\n  }\n`;\n_c15 = Input;\nconst GameEndScreen = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 27, 61, 0.98);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 3000;\n  backdrop-filter: blur(10px);\n`;\n_c16 = GameEndScreen;\nconst EndScreenContent = styled.div`\n  text-align: center;\n  animation: ${slideUp} 0.7s ease-out;\n  max-width: 600px;\n  width: 90%;\n  padding: 40px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 20px;\n  border: 2px solid rgba(255, 210, 0, 0.3);\n\n  h1 {\n    color: #FFD200;\n    font-size: 3.5em;\n    margin-bottom: 0.5em;\n    font-weight: 800;\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\n  }\n\n  p {\n    font-size: 1.4em;\n    margin: 0.8em 0;\n    opacity: 0.9;\n    color: white;\n  }\n`;\n_c17 = EndScreenContent;\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-top: 40px;\n  justify-content: center;\n`;\n_c18 = ButtonGroup;\nconst NavigationButton = styled(Button)`\n  min-width: 200px;\n`;\n_c19 = NavigationButton;\nconst GuessButton = styled(Button)`\n  position: fixed;\n  bottom: 40px;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 18px 50px;\n  font-size: 20px;\n  z-index: 999;\n  background: rgba(255, 210, 0, 0.9);\n  backdrop-filter: blur(10px);\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover:not(:disabled) {\n    background: #FFD200;\n    transform: translateX(-50%) translateY(-4px);\n    box-shadow: 0 8px 30px rgba(255, 210, 0, 0.4);\n  }\n\n  &:disabled {\n    background: rgba(255, 255, 255, 0.1);\n    transform: translateX(-50%);\n  }\n`;\n_c20 = GuessButton;\n// Add this new component for handling map clicks\nconst MapEvents = ({\n  onClick\n}) => {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    map.on('click', onClick);\n    return () => {\n      map.off('click', onClick);\n    };\n  }, [map, onClick]);\n  return null;\n};\n\n// Add this new hook for handling map resize\n_s(MapEvents, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c21 = MapEvents;\nconst MapResizer = () => {\n  _s2();\n  const map = useMap();\n  useEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      map.invalidateSize();\n    });\n    const container = map.getContainer();\n    resizeObserver.observe(container);\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [map]);\n  return null;\n};\n\n// Function to select random locations for the game\n_s2(MapResizer, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c22 = MapResizer;\nconst getRandomLocations = count => {\n  // Make a copy of the locations array to avoid modifying the original\n  const availableLocations = [...locationsData];\n  const selectedLocations = [];\n  const usedIndexes = [];\n\n  // Check if we have enough locations\n  if (availableLocations.length < count) {\n    console.warn(`Not enough locations available. Requested ${count}, but only have ${availableLocations.length}`);\n    return availableLocations; // Return all available if not enough\n  }\n\n  // Select random locations\n  for (let i = 0; i < count; i++) {\n    // Find an unused location index\n    let randomIndex;\n    do {\n      randomIndex = Math.floor(Math.random() * availableLocations.length);\n    } while (usedIndexes.includes(randomIndex));\n\n    // Add to selected locations and mark as used\n    selectedLocations.push(availableLocations[randomIndex]);\n    usedIndexes.push(randomIndex);\n  }\n  return selectedLocations;\n};\nconst Game = () => {\n  _s3();\n  const {\n    mode\n  } = useParams();\n  const navigate = useNavigate();\n\n  // Initialize game with random locations\n  const [gameState, setGameState] = useState(() => {\n    const gameLocations = getRandomLocations(5);\n    return {\n      currentRound: 1,\n      score: 0,\n      selectedLocation: null,\n      timeRemaining: mode === 'challenge' ? 120 : null,\n      locations: gameLocations,\n      usedLocationIds: gameLocations.map(loc => loc.id),\n      showingResult: false,\n      lastGuessScore: 0,\n      lastGuessDistance: 0,\n      pastGuesses: [],\n      username: localStorage.getItem('username'),\n      showUsernameModal: false,\n      gameEnded: false\n    };\n  });\n  const [isMapExpanded, setIsMapExpanded] = useState(false);\n  const [isSlightlyExpanded, setIsSlightlyExpanded] = useState(false);\n  useEffect(() => {\n    // Check if we need to show the username modal\n    if (mode === 'challenge' && !gameState.username) {\n      setGameState(prev => ({\n        ...prev,\n        showUsernameModal: true\n      }));\n    }\n  }, [mode, gameState.username]);\n  const handleUsernameSubmit = event => {\n    event.preventDefault();\n    const username = event.currentTarget.elements.namedItem('username').value.trim();\n    if (username) {\n      localStorage.setItem('username', username);\n      setGameState(prev => ({\n        ...prev,\n        username,\n        showUsernameModal: false\n      }));\n    }\n  };\n  const submitScore = finalScore => {\n    if (mode === 'challenge' && gameState.username) {\n      const leaderboardEntry = {\n        username: gameState.username,\n        score: finalScore,\n        timestamp: Date.now()\n      };\n\n      // Get existing leaderboard\n      const existingLeaderboard = JSON.parse(localStorage.getItem('leaderboard') || '[]');\n\n      // Add new score\n      existingLeaderboard.push(leaderboardEntry);\n\n      // Sort by score (highest first)\n      const sortedLeaderboard = existingLeaderboard.sort((a, b) => b.score - a.score)\n      // Remove duplicates (keep highest score for each user)\n      .filter((entry, index, self) => index === self.findIndex(t => t.username === entry.username)).slice(0, 10);\n\n      // Save back to localStorage\n      localStorage.setItem('leaderboard', JSON.stringify(sortedLeaderboard));\n    }\n  };\n  const handleMapClick = e => {\n    if (!gameState.showingResult) {\n      setGameState(prev => ({\n        ...prev,\n        selectedLocation: [e.latlng.lat, e.latlng.lng]\n      }));\n    }\n  };\n  const calculateDistance = (point1, point2) => {\n    const R = 3959; // Earth's radius in miles\n    const φ1 = point1[0] * Math.PI / 180;\n    const φ2 = point2[0] * Math.PI / 180;\n    const Δφ = (point2[0] - point1[0]) * Math.PI / 180;\n    const Δλ = (point2[1] - point1[1]) * Math.PI / 180;\n    const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    // Return distance in feet (multiply miles by 5280)\n    return R * c * 5280;\n  };\n  const handleGuess = () => {\n    if (!gameState.selectedLocation) return;\n    const currentLocation = gameState.locations[gameState.currentRound - 1];\n    const distance = calculateDistance(gameState.selectedLocation, currentLocation.coordinates);\n\n    // Super generous scoring formula with feet measurements:\n    // - Extremely close (< 50 feet): 4900-5000 points\n    // - Very close (< 100 feet): 4500-4900 points\n    // - Close (< 200 feet): 4000-4500 points\n    // - Nearby (< 500 feet): 3000-4000 points\n    // - In the area (< 1000 feet): 2000-3000 points\n    // - Far but trying (any distance): 1000 points minimum\n    let points = 1000; // Minimum points for trying - increased base points\n\n    if (distance <= 1000) {\n      if (distance <= 50) {\n        // Super generous curve for very close guesses\n        points = 4900 + 100 * Math.pow(1 - distance / 50, 1.2);\n      } else if (distance <= 100) {\n        points = 4500 + 400 * (1 - Math.pow((distance - 50) / 50, 1.2));\n      } else if (distance <= 200) {\n        points = 4000 + 500 * (1 - Math.pow((distance - 100) / 100, 1.2));\n      } else if (distance <= 500) {\n        points = 3000 + 1000 * (1 - Math.pow((distance - 200) / 300, 1.2));\n      } else {\n        points = 2000 + 1000 * (1 - Math.pow((distance - 500) / 500, 1.2));\n      }\n    }\n    points = Math.max(1000, Math.round(points));\n    const newGuess = {\n      guessed: gameState.selectedLocation,\n      actual: currentLocation.coordinates,\n      round: gameState.currentRound\n    };\n    setGameState(prev => ({\n      ...prev,\n      score: prev.score + points,\n      showingResult: true,\n      lastGuessScore: points,\n      lastGuessDistance: Number(distance.toFixed(0)),\n      pastGuesses: [...prev.pastGuesses, newGuess]\n    }));\n  };\n  const handleNextRound = () => {\n    if (gameState.currentRound === 5) {\n      // Game is complete, submit score and show end screen\n      submitScore(gameState.score);\n      setGameState(prev => ({\n        ...prev,\n        gameEnded: true,\n        showingResult: false\n      }));\n      return;\n    }\n\n    // Reset map size to default small size\n    setIsMapExpanded(false);\n    setIsSlightlyExpanded(false);\n    setGameState(prev => ({\n      ...prev,\n      currentRound: prev.currentRound + 1,\n      selectedLocation: null,\n      showingResult: false,\n      timeRemaining: mode === 'challenge' ? 120 : null\n    }));\n  };\n  useEffect(() => {\n    let timer;\n    if (mode === 'challenge' && gameState.timeRemaining !== null) {\n      // Clear any existing timer\n      if (timer) clearInterval(timer);\n      timer = setInterval(() => {\n        setGameState(prev => {\n          if (prev.timeRemaining === null || prev.timeRemaining <= 0) {\n            clearInterval(timer);\n            // Auto-submit guess when time runs out\n            if (!prev.showingResult && prev.selectedLocation) {\n              handleGuess();\n            }\n            return prev;\n          }\n          return {\n            ...prev,\n            timeRemaining: prev.timeRemaining - 1\n          };\n        });\n      }, 1000);\n      return () => {\n        if (timer) clearInterval(timer);\n      };\n    }\n  }, [mode, gameState.currentRound, gameState.timeRemaining]);\n  const handleMapToggle = () => {\n    setIsMapExpanded(!isMapExpanded);\n    // When fully expanding, ensure we're not in the slightly expanded state\n    if (!isMapExpanded) {\n      setIsSlightlyExpanded(false);\n    }\n  };\n  const handleSlightToggle = e => {\n    e.stopPropagation();\n    setIsSlightlyExpanded(!isSlightlyExpanded);\n    // Make sure we're not in full expanded mode\n    if (isMapExpanded) {\n      setIsMapExpanded(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: gameState.gameEnded ? /*#__PURE__*/_jsxDEV(GameEndScreen, {\n      children: /*#__PURE__*/_jsxDEV(EndScreenContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Game Complete!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your Final Score: \", gameState.score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Maximum Possible: 25,000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Accuracy: \", Math.round(gameState.score / 25000 * 100), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: [/*#__PURE__*/_jsxDEV(NavigationButton, {\n            onClick: () => navigate('/'),\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NavigationButton, {\n            onClick: () => navigate('/leaderboard'),\n            children: \"Leaderboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(UserModal, {\n        isVisible: gameState.showUsernameModal,\n        children: /*#__PURE__*/_jsxDEV(UserForm, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Welcome to Challenge Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please enter your username to compete on the leaderboard.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleUsernameSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"username\",\n              placeholder: \"Enter your username\",\n              maxLength: 20,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Start Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 11\n      }, this), mode === 'challenge' && gameState.timeRemaining !== null && /*#__PURE__*/_jsxDEV(Timer, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label\",\n          children: \"Time Remaining\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: [Math.floor(gameState.timeRemaining / 60), \":\", (gameState.timeRemaining % 60).toString().padStart(2, '0')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(GameStats, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label\",\n            children: \"Round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [gameState.currentRound, \"/5\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label\",\n            children: \"Total Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: gameState.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageViewer, {\n        children: /*#__PURE__*/_jsxDEV(ImageViewer360, {\n          objPath: gameState.locations[gameState.currentRound - 1].image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MapWrapper, {\n        isExpanded: isMapExpanded,\n        isSlightlyExpanded: isSlightlyExpanded,\n        \"data-expanded\": isMapExpanded || isSlightlyExpanded ? \"true\" : \"false\",\n        onClick: e => {\n          /* Prevent map from expanding to fullscreen when clicked */\n          e.stopPropagation();\n        },\n        children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n          onClick: e => {\n            e.stopPropagation();\n            if (isMapExpanded) handleMapToggle();\n          },\n          style: {\n            opacity: isMapExpanded ? 1 : 0\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ToggleMapSizeButton, {\n          onClick: handleSlightToggle,\n          style: {\n            display: isMapExpanded ? 'none' : 'flex'\n          },\n          children: isSlightlyExpanded ? '⊟' : '⊞'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [39.686757, -75.755243],\n          zoom: 15,\n          style: {\n            height: '100%',\n            width: '100%'\n          },\n          maxZoom: 19,\n          minZoom: 13,\n          maxBounds: [[39.666, -75.78],\n          // Expanded southwest corner\n          [39.706, -75.73] // Expanded northeast corner\n          ],\n          maxBoundsViscosity: 0.8,\n          preferCanvas: true,\n          zoomControl: true,\n          scrollWheelZoom: true,\n          dragging: true,\n          doubleClickZoom: true,\n          children: [/*#__PURE__*/_jsxDEV(MapEvents, {\n            onClick: handleMapClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 893,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MapResizer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 894,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n            maxNativeZoom: 19,\n            maxZoom: 19,\n            keepBuffer: 8,\n            updateWhenZooming: false,\n            updateWhenIdle: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 15\n          }, this), gameState.selectedLocation && /*#__PURE__*/_jsxDEV(Marker, {\n            position: gameState.selectedLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 17\n          }, this), gameState.pastGuesses.map((guess, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Marker, {\n              position: guess.actual,\n              icon: new L.Icon({\n                iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\n                iconSize: [25, 41],\n                iconAnchor: [12, 41]\n              }),\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: [\"Round \", guess.round]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 917,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Marker, {\n              position: guess.guessed,\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: [\"Your guess (Round \", guess.round, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 920,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 919,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n              positions: [guess.guessed, guess.actual],\n              color: \"#FF4444\",\n              weight: 2,\n              opacity: 0.5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ScoreOverlay, {\n        isVisible: gameState.showingResult,\n        children: [/*#__PURE__*/_jsxDEV(ResultInfo, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Round \", gameState.currentRound, \" Result\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Distance: \", gameState.lastGuessDistance, \" feet\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ScoreText, {\n            score: gameState.lastGuessScore,\n            children: [\"+\", gameState.lastGuessScore, \" points\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Score: \", gameState.score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ResultMapContainer, {\n          children: /*#__PURE__*/_jsxDEV(MapContainer, {\n            center: gameState.locations[gameState.currentRound - 1].coordinates,\n            zoom: 16,\n            style: {\n              height: '100%',\n              width: '100%'\n            },\n            maxZoom: 19,\n            minZoom: 14,\n            preferCanvas: true,\n            children: [/*#__PURE__*/_jsxDEV(MapResizer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n              attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n              maxNativeZoom: 19,\n              maxZoom: 19,\n              keepBuffer: 8,\n              updateWhenZooming: false,\n              updateWhenIdle: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 953,\n              columnNumber: 17\n            }, this), gameState.selectedLocation && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Marker, {\n                position: gameState.selectedLocation,\n                children: /*#__PURE__*/_jsxDEV(Popup, {\n                  children: \"Your guess\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 965,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 964,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Marker, {\n                position: gameState.locations[gameState.currentRound - 1].coordinates,\n                icon: new L.Icon({\n                  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\n                  iconSize: [25, 41],\n                  iconAnchor: [12, 41]\n                }),\n                children: /*#__PURE__*/_jsxDEV(Popup, {\n                  children: \"Actual location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 975,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 967,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n                positions: [gameState.selectedLocation, gameState.locations[gameState.currentRound - 1].coordinates],\n                color: \"#FF4444\",\n                weight: 3,\n                opacity: 0.8\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 977,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleNextRound,\n          children: \"Next Round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GuessButton, {\n        onClick: gameState.showingResult ? handleNextRound : handleGuess,\n        disabled: !gameState.showingResult && !gameState.selectedLocation,\n        children: gameState.showingResult ? 'Next Round' : 'Confirm Guess'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 794,\n    columnNumber: 5\n  }, this);\n};\n_s3(Game, \"u7Qq8i9QCwBzAqMj78wbcG4O22U=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c23 = Game;\nexport default Game;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"GameContainer\");\n$RefreshReg$(_c3, \"Timer\");\n$RefreshReg$(_c4, \"GameStats\");\n$RefreshReg$(_c5, \"CloseButton\");\n$RefreshReg$(_c6, \"MapWrapper\");\n$RefreshReg$(_c7, \"ToggleMapSizeButton\");\n$RefreshReg$(_c8, \"ImageViewer\");\n$RefreshReg$(_c9, \"ScoreOverlay\");\n$RefreshReg$(_c10, \"ResultInfo\");\n$RefreshReg$(_c11, \"ResultMapContainer\");\n$RefreshReg$(_c12, \"ScoreText\");\n$RefreshReg$(_c13, \"UserModal\");\n$RefreshReg$(_c14, \"UserForm\");\n$RefreshReg$(_c15, \"Input\");\n$RefreshReg$(_c16, \"GameEndScreen\");\n$RefreshReg$(_c17, \"EndScreenContent\");\n$RefreshReg$(_c18, \"ButtonGroup\");\n$RefreshReg$(_c19, \"NavigationButton\");\n$RefreshReg$(_c20, \"GuessButton\");\n$RefreshReg$(_c21, \"MapEvents\");\n$RefreshReg$(_c22, \"MapResizer\");\n$RefreshReg$(_c23, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","MapContainer","TileLayer","Marker","Popup","useMap","Polyline","styled","keyframes","L","ImageViewer360","locationsData","jsxDEV","_jsxDEV","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","fadeIn","slideUp","Button","button","_c","GameContainer","div","_c2","Timer","_c3","GameStats","_c4","CloseButton","_c5","MapWrapper","props","isExpanded","isSlightlyExpanded","_c6","ToggleMapSizeButton","_c7","ImageViewer","_c8","ScoreOverlay","isVisible","_c9","ResultInfo","_c10","ResultMapContainer","_c11","ScoreText","_c12","UserModal","_c13","UserForm","_c14","Input","input","_c15","GameEndScreen","_c16","EndScreenContent","_c17","ButtonGroup","_c18","NavigationButton","_c19","GuessButton","_c20","MapEvents","onClick","_s","map","on","off","_c21","MapResizer","_s2","resizeObserver","ResizeObserver","invalidateSize","container","getContainer","observe","disconnect","_c22","getRandomLocations","count","availableLocations","selectedLocations","usedIndexes","length","console","warn","i","randomIndex","Math","floor","random","includes","push","Game","_s3","mode","navigate","gameState","setGameState","gameLocations","currentRound","score","selectedLocation","timeRemaining","locations","usedLocationIds","loc","id","showingResult","lastGuessScore","lastGuessDistance","pastGuesses","username","localStorage","getItem","showUsernameModal","gameEnded","isMapExpanded","setIsMapExpanded","setIsSlightlyExpanded","prev","handleUsernameSubmit","event","preventDefault","currentTarget","elements","namedItem","value","trim","setItem","submitScore","finalScore","leaderboardEntry","timestamp","Date","now","existingLeaderboard","JSON","parse","sortedLeaderboard","sort","a","b","filter","entry","index","self","findIndex","t","slice","stringify","handleMapClick","e","latlng","lat","lng","calculateDistance","point1","point2","R","φ1","PI","φ2","Δφ","Δλ","sin","cos","c","atan2","sqrt","handleGuess","currentLocation","distance","coordinates","points","pow","max","round","newGuess","guessed","actual","Number","toFixed","handleNextRound","timer","clearInterval","setInterval","handleMapToggle","handleSlightToggle","stopPropagation","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","maxLength","required","className","toString","padStart","objPath","image","style","opacity","display","center","zoom","height","width","maxZoom","minZoom","maxBounds","maxBoundsViscosity","preferCanvas","zoomControl","scrollWheelZoom","dragging","doubleClickZoom","url","attribution","maxNativeZoom","keepBuffer","updateWhenZooming","updateWhenIdle","position","guess","icon","iconSize","iconAnchor","positions","color","weight","disabled","_c23","$RefreshReg$"],"sources":["/Users/mdv/Documents/programming/HenHack25/UDelaWhere/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup, useMap, useMapEvent, useMapEvents, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport styled, { keyframes } from 'styled-components';\nimport L from 'leaflet';\nimport ImageViewer360 from './ImageViewer360';\nimport locationsData from '../data/locations.json';\n\n// Fix for default marker icons in React-Leaflet\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\nconst fadeIn = keyframes`\n  from { opacity: 0; }\n  to { opacity: 1; }\n`;\n\nconst slideUp = keyframes`\n  from { transform: translateY(20px); opacity: 0; }\n  to { transform: translateY(0); opacity: 1; }\n`;\n\nconst Button = styled.button`\n  padding: 16px 40px;\n  background: #FFD200;\n  color: #00539F;\n  border: none;\n  border-radius: 30px;\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 700;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  box-shadow: 0 4px 20px rgba(255, 210, 0, 0.3);\n\n  &:hover:not(:disabled) {\n    background: #FFE04C;\n    transform: translateY(-2px);\n    box-shadow: 0 8px 30px rgba(255, 210, 0, 0.4);\n  }\n\n  &:disabled {\n    background: rgba(255, 255, 255, 0.1);\n    color: rgba(255, 255, 255, 0.4);\n    cursor: not-allowed;\n    transform: none;\n    box-shadow: none;\n  }\n`;\n\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: #001B3D;\n  color: white;\n  font-family: 'Proxima Nova', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n  position: relative;\n`;\n\nconst Timer = styled.div`\n  position: fixed;\n  top: 100px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(0, 27, 61, 0.85);\n  padding: 15px 30px;\n  border-radius: 20px;\n  border: 2px solid rgba(255, 210, 0, 0.3);\n  backdrop-filter: blur(10px);\n  z-index: 1001;\n  animation: ${fadeIn} 0.5s ease-out;\n  text-align: center;\n  pointer-events: none;\n  \n  .time {\n    font-size: 2.5em;\n    font-weight: 800;\n    color: #FFD200;\n    letter-spacing: 2px;\n    text-shadow: 0 2px 4px rgba(0,0,0,0.3);\n  }\n  \n  .label {\n    font-size: 0.9em;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    opacity: 0.8;\n    margin-bottom: 5px;\n  }\n`;\n\nconst GameStats = styled.div`\n  position: fixed;\n  top: 100px;\n  right: 40px;\n  background: rgba(0, 27, 61, 0.85);\n  padding: 15px 30px;\n  border-radius: 20px;\n  border: 2px solid rgba(255, 210, 0, 0.3);\n  backdrop-filter: blur(10px);\n  z-index: 1001;\n  animation: ${fadeIn} 0.5s ease-out;\n  pointer-events: none;\n\n  .stat {\n    text-align: right;\n    margin: 8px 0;\n  }\n\n  .label {\n    font-size: 0.9em;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    opacity: 0.8;\n  }\n\n  .value {\n    font-size: 1.4em;\n    font-weight: 800;\n    color: #FFD200;\n    letter-spacing: 1px;\n    text-shadow: 0 2px 4px rgba(0,0,0,0.3);\n  }\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  width: 32px;\n  height: 32px;\n  background: rgba(0, 27, 61, 0.85);\n  border: none;\n  border-radius: 50%;\n  color: white;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  opacity: 0;\n  transform: translateX(20px);\n  transition: all 0.3s ease;\n  z-index: 1002;\n  backdrop-filter: blur(5px);\n\n  &:hover {\n    background: #00539F;\n  }\n`;\n\nconst MapWrapper = styled.div<{ isExpanded: boolean; isSlightlyExpanded: boolean }>`\n  position: fixed;\n  bottom: 40px;\n  right: 40px;\n  width: ${props => {\n    if (props.isExpanded) return 'calc(100% - 80px)';\n    if (props.isSlightlyExpanded) return '750px';\n    return '400px';\n  }};\n  height: ${props => {\n    if (props.isExpanded) return 'calc(100vh - 300px)';\n    if (props.isSlightlyExpanded) return '450px';\n    return '250px';\n  }};\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  z-index: 1000;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n  transform-origin: bottom right;\n  border: 2px solid ${props => props.isExpanded ? '#FFD200' : 'rgba(255, 210, 0, 0.3)'};\n\n  &:hover:not([data-expanded=\"true\"]) {\n    width: 500px;\n    height: 320px;\n    transform: translateZ(0);\n    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.4);\n  }\n\n  ${CloseButton}, .leaflet-control-zoom {\n    opacity: ${props => props.isExpanded ? 1 : 0};\n    transform: ${props => props.isExpanded ? 'translateX(0)' : 'translateX(20px)'};\n    transition: all 0.3s ease;\n  }\n\n  .leaflet-container {\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n    background: #1a1a1a;\n  }\n\n  .leaflet-control-container {\n    z-index: 2;\n  }\n\n  .leaflet-control-zoom {\n    margin: 15px;\n    \n    a {\n      background: rgba(0, 83, 159, 0.9);\n      color: white;\n      border: none;\n      \n      &:hover {\n        background: #00539F;\n      }\n    }\n  }\n`;\n\nconst ToggleMapSizeButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  background: rgba(0, 0, 0, 0.7);\n  border: none;\n  border-radius: 6px;\n  color: white;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  z-index: 1002;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: rgba(0, 0, 0, 0.9);\n  }\n`;\n\nconst ImageViewer = styled.div`\n  flex: 1;\n  background: #000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n  pointer-events: auto;\n\n  &:after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 200px;\n    background: linear-gradient(to top, rgba(0,27,61,0.9) 0%, rgba(0,27,61,0) 100%);\n    pointer-events: none;\n  }\n`;\n\nconst ScoreOverlay = styled.div<{ isVisible: boolean }>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 27, 61, 0.98);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  opacity: ${props => props.isVisible ? 1 : 0};\n  visibility: ${props => props.isVisible ? 'visible' : 'hidden'};\n  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n  z-index: 2000;\n  padding: 40px;\n  backdrop-filter: blur(10px);\n`;\n\nconst ResultInfo = styled.div`\n  text-align: center;\n  color: white;\n  margin-bottom: 30px;\n  animation: ${slideUp} 0.5s ease-out;\n\n  h2 {\n    color: #FFD200;\n    font-size: 3em;\n    margin-bottom: 0.5em;\n    font-weight: 800;\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\n  }\n\n  p {\n    font-size: 1.4em;\n    margin: 0.8em 0;\n    opacity: 0.9;\n  }\n`;\n\nconst ResultMapContainer = styled.div`\n  width: 85%;\n  height: 65%;\n  margin: 30px 0;\n  border-radius: 16px;\n  overflow: hidden;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);\n  border: 3px solid #FFD200;\n  animation: ${slideUp} 0.7s ease-out;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 100px;\n    background: linear-gradient(to bottom, rgba(0,83,159,0.4) 0%, rgba(0,83,159,0) 100%);\n    pointer-events: none;\n    z-index: 1;\n  }\n`;\n\nconst ScoreText = styled.div<{ score: number }>`\n  font-size: 3.5em;\n  font-weight: 800;\n  color: #FFD200;\n  margin: 25px 0;\n  text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\n  animation: ${fadeIn} 0.8s ease-out;\n  letter-spacing: 2px;\n`;\n\nconst UserModal = styled.div<{ isVisible: boolean }>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 27, 61, 0.98);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  opacity: ${props => props.isVisible ? 1 : 0};\n  visibility: ${props => props.isVisible ? 'visible' : 'hidden'};\n  transition: all 0.3s ease;\n  z-index: 3000;\n  backdrop-filter: blur(10px);\n`;\n\nconst UserForm = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  padding: 40px;\n  border-radius: 16px;\n  text-align: center;\n  animation: ${fadeIn} 0.5s ease-out;\n  border: 2px solid rgba(255, 210, 0, 0.3);\n  max-width: 400px;\n  width: 90%;\n\n  h2 {\n    color: #FFD200;\n    font-size: 2em;\n    margin-bottom: 1em;\n  }\n\n  p {\n    margin-bottom: 2em;\n    opacity: 0.8;\n    line-height: 1.6;\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  margin-bottom: 20px;\n  border: 2px solid rgba(255, 210, 0, 0.3);\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  font-size: 16px;\n  transition: all 0.3s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #FFD200;\n    background: rgba(255, 255, 255, 0.15);\n  }\n\n  &::placeholder {\n    color: rgba(255, 255, 255, 0.5);\n  }\n`;\n\nconst GameEndScreen = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 27, 61, 0.98);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 3000;\n  backdrop-filter: blur(10px);\n`;\n\nconst EndScreenContent = styled.div`\n  text-align: center;\n  animation: ${slideUp} 0.7s ease-out;\n  max-width: 600px;\n  width: 90%;\n  padding: 40px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 20px;\n  border: 2px solid rgba(255, 210, 0, 0.3);\n\n  h1 {\n    color: #FFD200;\n    font-size: 3.5em;\n    margin-bottom: 0.5em;\n    font-weight: 800;\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\n  }\n\n  p {\n    font-size: 1.4em;\n    margin: 0.8em 0;\n    opacity: 0.9;\n    color: white;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-top: 40px;\n  justify-content: center;\n`;\n\nconst NavigationButton = styled(Button)`\n  min-width: 200px;\n`;\n\nconst GuessButton = styled(Button)`\n  position: fixed;\n  bottom: 40px;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 18px 50px;\n  font-size: 20px;\n  z-index: 999;\n  background: rgba(255, 210, 0, 0.9);\n  backdrop-filter: blur(10px);\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover:not(:disabled) {\n    background: #FFD200;\n    transform: translateX(-50%) translateY(-4px);\n    box-shadow: 0 8px 30px rgba(255, 210, 0, 0.4);\n  }\n\n  &:disabled {\n    background: rgba(255, 255, 255, 0.1);\n    transform: translateX(-50%);\n  }\n`;\n\ninterface LeaderboardEntry {\n  username: string;\n  score: number;\n  timestamp: number;\n}\n\ninterface Location {\n  id: string;\n  image: string;\n  coordinates: [number, number];\n  name: string;\n}\n\ninterface GameState {\n  currentRound: number;\n  score: number;\n  selectedLocation: [number, number] | null;\n  timeRemaining: number | null;\n  locations: Location[];\n  usedLocationIds: string[];\n  showingResult: boolean;\n  lastGuessScore: number;\n  lastGuessDistance: number;\n  pastGuesses: Array<{\n    guessed: [number, number];\n    actual: [number, number];\n    round: number;\n  }>;\n  username: string | null;\n  showUsernameModal: boolean;\n  gameEnded: boolean;\n}\n\n// Add this new component for handling map clicks\nconst MapEvents: React.FC<{ onClick: (e: L.LeafletMouseEvent) => void }> = ({ onClick }) => {\n  const map = useMap();\n  useEffect(() => {\n    map.on('click', onClick);\n    return () => {\n      map.off('click', onClick);\n    };\n  }, [map, onClick]);\n  return null;\n};\n\n// Add this new hook for handling map resize\nconst MapResizer: React.FC = () => {\n  const map = useMap();\n  \n  useEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      map.invalidateSize();\n    });\n    \n    const container = map.getContainer();\n    resizeObserver.observe(container);\n    \n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [map]);\n\n  return null;\n};\n\n// Function to select random locations for the game\nconst getRandomLocations = (count: number): Location[] => {\n  // Make a copy of the locations array to avoid modifying the original\n  const availableLocations = [...(locationsData as Location[])];\n  const selectedLocations: Location[] = [];\n  const usedIndexes: number[] = [];\n  \n  // Check if we have enough locations\n  if (availableLocations.length < count) {\n    console.warn(`Not enough locations available. Requested ${count}, but only have ${availableLocations.length}`);\n    return availableLocations; // Return all available if not enough\n  }\n  \n  // Select random locations\n  for (let i = 0; i < count; i++) {\n    // Find an unused location index\n    let randomIndex: number;\n    do {\n      randomIndex = Math.floor(Math.random() * availableLocations.length);\n    } while (usedIndexes.includes(randomIndex));\n    \n    // Add to selected locations and mark as used\n    selectedLocations.push(availableLocations[randomIndex]);\n    usedIndexes.push(randomIndex);\n  }\n  \n  return selectedLocations;\n};\n\nconst Game: React.FC = () => {\n  const { mode } = useParams();\n  const navigate = useNavigate();\n  \n  // Initialize game with random locations\n  const [gameState, setGameState] = useState<GameState>(() => {\n    const gameLocations = getRandomLocations(5);\n    return {\n      currentRound: 1,\n      score: 0,\n      selectedLocation: null,\n      timeRemaining: mode === 'challenge' ? 120 : null,\n      locations: gameLocations,\n      usedLocationIds: gameLocations.map(loc => loc.id),\n      showingResult: false,\n      lastGuessScore: 0,\n      lastGuessDistance: 0,\n      pastGuesses: [],\n      username: localStorage.getItem('username'),\n      showUsernameModal: false,\n      gameEnded: false\n    };\n  });\n\n  const [isMapExpanded, setIsMapExpanded] = useState(false);\n  const [isSlightlyExpanded, setIsSlightlyExpanded] = useState(false);\n\n  useEffect(() => {\n    // Check if we need to show the username modal\n    if (mode === 'challenge' && !gameState.username) {\n      setGameState(prev => ({ ...prev, showUsernameModal: true }));\n    }\n  }, [mode, gameState.username]);\n\n  const handleUsernameSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const username = (event.currentTarget.elements.namedItem('username') as HTMLInputElement).value.trim();\n    if (username) {\n      localStorage.setItem('username', username);\n      setGameState(prev => ({ \n        ...prev, \n        username,\n        showUsernameModal: false \n      }));\n    }\n  };\n\n  const submitScore = (finalScore: number) => {\n    if (mode === 'challenge' && gameState.username) {\n      const leaderboardEntry: LeaderboardEntry = {\n        username: gameState.username,\n        score: finalScore,\n        timestamp: Date.now()\n      };\n\n      // Get existing leaderboard\n      const existingLeaderboard = JSON.parse(localStorage.getItem('leaderboard') || '[]');\n      \n      // Add new score\n      existingLeaderboard.push(leaderboardEntry);\n      \n      // Sort by score (highest first)\n      const sortedLeaderboard = existingLeaderboard\n        .sort((a: LeaderboardEntry, b: LeaderboardEntry) => b.score - a.score)\n        // Remove duplicates (keep highest score for each user)\n        .filter((entry: LeaderboardEntry, index: number, self: LeaderboardEntry[]) =>\n          index === self.findIndex((t) => t.username === entry.username)\n        )\n        .slice(0, 10);\n\n      // Save back to localStorage\n      localStorage.setItem('leaderboard', JSON.stringify(sortedLeaderboard));\n    }\n  };\n\n  const handleMapClick = (e: L.LeafletMouseEvent) => {\n    if (!gameState.showingResult) {\n      setGameState(prev => ({\n        ...prev,\n        selectedLocation: [e.latlng.lat, e.latlng.lng],\n      }));\n    }\n  };\n\n  const calculateDistance = (point1: [number, number], point2: [number, number]): number => {\n    const R = 3959; // Earth's radius in miles\n    const φ1 = point1[0] * Math.PI / 180;\n    const φ2 = point2[0] * Math.PI / 180;\n    const Δφ = (point2[0] - point1[0]) * Math.PI / 180;\n    const Δλ = (point2[1] - point1[1]) * Math.PI / 180;\n\n    const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\n              Math.cos(φ1) * Math.cos(φ2) *\n              Math.sin(Δλ/2) * Math.sin(Δλ/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n\n    // Return distance in feet (multiply miles by 5280)\n    return R * c * 5280;\n  };\n\n  const handleGuess = () => {\n    if (!gameState.selectedLocation) return;\n\n    const currentLocation = gameState.locations[gameState.currentRound - 1];\n    const distance = calculateDistance(gameState.selectedLocation, currentLocation.coordinates);\n    \n    // Super generous scoring formula with feet measurements:\n    // - Extremely close (< 50 feet): 4900-5000 points\n    // - Very close (< 100 feet): 4500-4900 points\n    // - Close (< 200 feet): 4000-4500 points\n    // - Nearby (< 500 feet): 3000-4000 points\n    // - In the area (< 1000 feet): 2000-3000 points\n    // - Far but trying (any distance): 1000 points minimum\n    let points = 1000; // Minimum points for trying - increased base points\n    \n    if (distance <= 1000) {\n      if (distance <= 50) {\n        // Super generous curve for very close guesses\n        points = 4900 + (100 * Math.pow(1 - (distance / 50), 1.2));\n      } else if (distance <= 100) {\n        points = 4500 + (400 * (1 - Math.pow((distance - 50) / 50, 1.2)));\n      } else if (distance <= 200) {\n        points = 4000 + (500 * (1 - Math.pow((distance - 100) / 100, 1.2)));\n      } else if (distance <= 500) {\n        points = 3000 + (1000 * (1 - Math.pow((distance - 200) / 300, 1.2)));\n      } else {\n        points = 2000 + (1000 * (1 - Math.pow((distance - 500) / 500, 1.2)));\n      }\n    }\n    \n    points = Math.max(1000, Math.round(points));\n\n    const newGuess = {\n      guessed: gameState.selectedLocation as [number, number],\n      actual: currentLocation.coordinates,\n      round: gameState.currentRound\n    };\n\n    setGameState(prev => ({\n      ...prev,\n      score: prev.score + points,\n      showingResult: true,\n      lastGuessScore: points,\n      lastGuessDistance: Number(distance.toFixed(0)),\n      pastGuesses: [...prev.pastGuesses, newGuess]\n    }));\n  };\n\n  const handleNextRound = () => {\n    if (gameState.currentRound === 5) {\n      // Game is complete, submit score and show end screen\n      submitScore(gameState.score);\n      setGameState(prev => ({\n        ...prev,\n        gameEnded: true,\n        showingResult: false\n      }));\n      return;\n    }\n    \n    // Reset map size to default small size\n    setIsMapExpanded(false);\n    setIsSlightlyExpanded(false);\n    \n    setGameState(prev => ({\n      ...prev,\n      currentRound: prev.currentRound + 1,\n      selectedLocation: null,\n      showingResult: false,\n      timeRemaining: mode === 'challenge' ? 120 : null\n    }));\n  };\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout | undefined;\n    \n    if (mode === 'challenge' && gameState.timeRemaining !== null) {\n      // Clear any existing timer\n      if (timer) clearInterval(timer);\n      \n      timer = setInterval(() => {\n        setGameState(prev => {\n          if (prev.timeRemaining === null || prev.timeRemaining <= 0) {\n            clearInterval(timer);\n            // Auto-submit guess when time runs out\n            if (!prev.showingResult && prev.selectedLocation) {\n              handleGuess();\n            }\n            return prev;\n          }\n          return { ...prev, timeRemaining: prev.timeRemaining - 1 };\n        });\n      }, 1000);\n\n      return () => {\n        if (timer) clearInterval(timer);\n      };\n    }\n  }, [mode, gameState.currentRound, gameState.timeRemaining]);\n\n  const handleMapToggle = () => {\n    setIsMapExpanded(!isMapExpanded);\n    // When fully expanding, ensure we're not in the slightly expanded state\n    if (!isMapExpanded) {\n      setIsSlightlyExpanded(false);\n    }\n  };\n\n  const handleSlightToggle = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    setIsSlightlyExpanded(!isSlightlyExpanded);\n    // Make sure we're not in full expanded mode\n    if (isMapExpanded) {\n      setIsMapExpanded(false);\n    }\n  };\n\n  return (\n    <GameContainer>\n      {gameState.gameEnded ? (\n        <GameEndScreen>\n          <EndScreenContent>\n            <h1>Game Complete!</h1>\n            <p>Your Final Score: {gameState.score}</p>\n            <p>Maximum Possible: 25,000</p>\n            <p>Accuracy: {Math.round((gameState.score / 25000) * 100)}%</p>\n            <ButtonGroup>\n              <NavigationButton onClick={() => navigate('/')}>\n                Home\n              </NavigationButton>\n              <NavigationButton onClick={() => navigate('/leaderboard')}>\n                Leaderboard\n              </NavigationButton>\n            </ButtonGroup>\n          </EndScreenContent>\n        </GameEndScreen>\n      ) : (\n        <>\n          <UserModal isVisible={gameState.showUsernameModal}>\n            <UserForm>\n              <h2>Welcome to Challenge Mode</h2>\n              <p>Please enter your username to compete on the leaderboard.</p>\n              <form onSubmit={handleUsernameSubmit}>\n                <Input\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"Enter your username\"\n                  maxLength={20}\n                  required\n                />\n                <Button type=\"submit\">Start Game</Button>\n              </form>\n            </UserForm>\n          </UserModal>\n          {mode === 'challenge' && gameState.timeRemaining !== null && (\n            <Timer>\n              <div className=\"label\">Time Remaining</div>\n              <div className=\"time\">\n                {Math.floor(gameState.timeRemaining / 60)}:\n                {(gameState.timeRemaining % 60).toString().padStart(2, '0')}\n              </div>\n            </Timer>\n          )}\n          <GameStats>\n            <div className=\"stat\">\n              <div className=\"label\">Round</div>\n              <div className=\"value\">{gameState.currentRound}/5</div>\n            </div>\n            <div className=\"stat\">\n              <div className=\"label\">Total Score</div>\n              <div className=\"value\">{gameState.score}</div>\n            </div>\n          </GameStats>\n          <ImageViewer>\n            <ImageViewer360 objPath={gameState.locations[gameState.currentRound - 1].image} />\n          </ImageViewer>\n\n          <MapWrapper \n            isExpanded={isMapExpanded}\n            isSlightlyExpanded={isSlightlyExpanded}\n            data-expanded={isMapExpanded || isSlightlyExpanded ? \"true\" : \"false\"}\n            onClick={(e) => {/* Prevent map from expanding to fullscreen when clicked */\n              e.stopPropagation();\n            }}\n          >\n            <CloseButton \n              onClick={(e) => {\n                e.stopPropagation();\n                if (isMapExpanded) handleMapToggle();\n              }}\n              style={{ opacity: isMapExpanded ? 1 : 0 }}\n            >\n              ×\n            </CloseButton>\n            <ToggleMapSizeButton\n              onClick={handleSlightToggle}\n              style={{ display: isMapExpanded ? 'none' : 'flex' }}\n            >\n              {isSlightlyExpanded ? '⊟' : '⊞'}\n            </ToggleMapSizeButton>\n            <MapContainer\n              center={[39.686757, -75.755243] as [number, number]}\n              zoom={15}\n              style={{ height: '100%', width: '100%' }}\n              maxZoom={19}\n              minZoom={13}\n              maxBounds={[\n                [39.666, -75.78],  // Expanded southwest corner\n                [39.706, -75.73]   // Expanded northeast corner\n              ]}\n              maxBoundsViscosity={0.8}\n              preferCanvas={true}\n              zoomControl={true}\n              scrollWheelZoom={true}\n              dragging={true}\n              doubleClickZoom={true}\n            >\n              <MapEvents onClick={handleMapClick} />\n              <MapResizer />\n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                maxNativeZoom={19}\n                maxZoom={19}\n                keepBuffer={8}\n                updateWhenZooming={false}\n                updateWhenIdle={true}\n              />\n              {gameState.selectedLocation && (\n                <Marker position={gameState.selectedLocation} />\n              )}\n              {gameState.pastGuesses.map((guess, index) => (\n                <React.Fragment key={index}>\n                  <Marker \n                    position={guess.actual}\n                    icon={new L.Icon({\n                      iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\n                      iconSize: [25, 41],\n                      iconAnchor: [12, 41]\n                    })}\n                  >\n                    <Popup>Round {guess.round}</Popup>\n                  </Marker>\n                  <Marker position={guess.guessed}>\n                    <Popup>Your guess (Round {guess.round})</Popup>\n                  </Marker>\n                  <Polyline \n                    positions={[guess.guessed, guess.actual]}\n                    color=\"#FF4444\"\n                    weight={2}\n                    opacity={0.5}\n                  />\n                </React.Fragment>\n              ))}\n            </MapContainer>\n          </MapWrapper>\n\n          <ScoreOverlay isVisible={gameState.showingResult}>\n            <ResultInfo>\n              <h2>Round {gameState.currentRound} Result</h2>\n              <p>Distance: {gameState.lastGuessDistance} feet</p>\n              <ScoreText score={gameState.lastGuessScore}>\n                +{gameState.lastGuessScore} points\n              </ScoreText>\n              <p>Total Score: {gameState.score}</p>\n            </ResultInfo>\n            \n            <ResultMapContainer>\n              <MapContainer\n                center={gameState.locations[gameState.currentRound - 1].coordinates}\n                zoom={16}\n                style={{ height: '100%', width: '100%' }}\n                maxZoom={19}\n                minZoom={14}\n                preferCanvas={true}\n              >\n                <MapResizer />\n                <TileLayer\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                  attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                  maxNativeZoom={19}\n                  maxZoom={19}\n                  keepBuffer={8}\n                  updateWhenZooming={false}\n                  updateWhenIdle={true}\n                />\n                {gameState.selectedLocation && (\n                  <>\n                    <Marker position={gameState.selectedLocation}>\n                      <Popup>Your guess</Popup>\n                    </Marker>\n                    <Marker \n                      position={gameState.locations[gameState.currentRound - 1].coordinates}\n                      icon={new L.Icon({\n                        iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\n                        iconSize: [25, 41],\n                        iconAnchor: [12, 41]\n                      })}\n                    >\n                      <Popup>Actual location</Popup>\n                    </Marker>\n                    <Polyline \n                      positions={[\n                        gameState.selectedLocation,\n                        gameState.locations[gameState.currentRound - 1].coordinates\n                      ]}\n                      color=\"#FF4444\"\n                      weight={3}\n                      opacity={0.8}\n                    />\n                  </>\n                )}\n              </MapContainer>\n            </ResultMapContainer>\n            \n            <Button onClick={handleNextRound}>\n              Next Round\n            </Button>\n          </ScoreOverlay>\n\n          <GuessButton\n            onClick={gameState.showingResult ? handleNextRound : handleGuess}\n            disabled={!gameState.showingResult && !gameState.selectedLocation}\n          >\n            {gameState.showingResult ? 'Next Round' : 'Confirm Guess'}\n          </GuessButton>\n        </>\n      )}\n    </GameContainer>\n  );\n};\n\nexport default Game; "],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAA6BC,QAAQ,QAAQ,eAAe;AACnH,OAAO,0BAA0B;AACjC,OAAOC,MAAM,IAAIC,SAAS,QAAQ,mBAAmB;AACrD,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,aAAa,MAAM,wBAAwB;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,OAAQN,CAAC,CAACO,IAAI,CAACC,OAAO,CAACC,SAAS,CAASC,WAAW;AACpDV,CAAC,CAACO,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EAAEC,OAAO,CAAC,wCAAwC,CAAC;EAChEC,OAAO,EAAED,OAAO,CAAC,qCAAqC,CAAC;EACvDE,SAAS,EAAEF,OAAO,CAAC,uCAAuC;AAC5D,CAAC,CAAC;AAEF,MAAMG,MAAM,GAAGjB,SAAS;AACxB;AACA;AACA,CAAC;AAED,MAAMkB,OAAO,GAAGlB,SAAS;AACzB;AACA;AACA,CAAC;AAED,MAAMmB,MAAM,GAAGpB,MAAM,CAACqB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GA3BIF,MAAM;AA6BZ,MAAMG,aAAa,GAAGvB,MAAM,CAACwB,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GARIF,aAAa;AAUnB,MAAMG,KAAK,GAAG1B,MAAM,CAACwB,GAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeN,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACS,GAAA,GA9BID,KAAK;AAgCX,MAAME,SAAS,GAAG5B,MAAM,CAACwB,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeN,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACW,GAAA,GAhCID,SAAS;AAkCf,MAAME,WAAW,GAAG9B,MAAM,CAACqB,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACU,GAAA,GAxBID,WAAW;AA0BjB,MAAME,UAAU,GAAGhC,MAAM,CAACwB,GAAyD;AACnF;AACA;AACA;AACA,WAAWS,KAAK,IAAI;EAChB,IAAIA,KAAK,CAACC,UAAU,EAAE,OAAO,mBAAmB;EAChD,IAAID,KAAK,CAACE,kBAAkB,EAAE,OAAO,OAAO;EAC5C,OAAO,OAAO;AAChB,CAAC;AACH,YAAYF,KAAK,IAAI;EACjB,IAAIA,KAAK,CAACC,UAAU,EAAE,OAAO,qBAAqB;EAClD,IAAID,KAAK,CAACE,kBAAkB,EAAE,OAAO,OAAO;EAC5C,OAAO,OAAO;AAChB,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsBF,KAAK,IAAIA,KAAK,CAACC,UAAU,GAAG,SAAS,GAAG,wBAAwB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIJ,WAAW;AACf,eAAeG,KAAK,IAAIA,KAAK,CAACC,UAAU,GAAG,CAAC,GAAG,CAAC;AAChD,iBAAiBD,KAAK,IAAIA,KAAK,CAACC,UAAU,GAAG,eAAe,GAAG,kBAAkB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACE,GAAA,GA3DIJ,UAAU;AA6DhB,MAAMK,mBAAmB,GAAGrC,MAAM,CAACqB,MAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACiB,GAAA,GArBID,mBAAmB;AAuBzB,MAAME,WAAW,GAAGvC,MAAM,CAACwB,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgB,GAAA,GApBID,WAAW;AAsBjB,MAAME,YAAY,GAAGzC,MAAM,CAACwB,GAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaS,KAAK,IAAIA,KAAK,CAACS,SAAS,GAAG,CAAC,GAAG,CAAC;AAC7C,gBAAgBT,KAAK,IAAIA,KAAK,CAACS,SAAS,GAAG,SAAS,GAAG,QAAQ;AAC/D;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAjBIF,YAAY;AAmBlB,MAAMG,UAAU,GAAG5C,MAAM,CAACwB,GAAG;AAC7B;AACA;AACA;AACA,eAAeL,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC0B,IAAA,GArBID,UAAU;AAuBhB,MAAME,kBAAkB,GAAG9C,MAAM,CAACwB,GAAG;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeL,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC4B,IAAA,GAtBID,kBAAkB;AAwBxB,MAAME,SAAS,GAAGhD,MAAM,CAACwB,GAAsB;AAC/C;AACA;AACA;AACA;AACA;AACA,eAAeN,MAAM;AACrB;AACA,CAAC;AAAC+B,IAAA,GARID,SAAS;AAUf,MAAME,SAAS,GAAGlD,MAAM,CAACwB,GAA2B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaS,KAAK,IAAIA,KAAK,CAACS,SAAS,GAAG,CAAC,GAAG,CAAC;AAC7C,gBAAgBT,KAAK,IAAIA,KAAK,CAACS,SAAS,GAAG,SAAS,GAAG,QAAQ;AAC/D;AACA;AACA;AACA,CAAC;AAACS,IAAA,GAhBID,SAAS;AAkBf,MAAME,QAAQ,GAAGpD,MAAM,CAACwB,GAAG;AAC3B;AACA;AACA;AACA;AACA,eAAeN,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACmC,IAAA,GArBID,QAAQ;AAuBd,MAAME,KAAK,GAAGtD,MAAM,CAACuD,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GApBIF,KAAK;AAsBX,MAAMG,aAAa,GAAGzD,MAAM,CAACwB,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACkC,IAAA,GAbID,aAAa;AAenB,MAAME,gBAAgB,GAAG3D,MAAM,CAACwB,GAAG;AACnC;AACA,eAAeL,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACyC,IAAA,GA1BID,gBAAgB;AA4BtB,MAAME,WAAW,GAAG7D,MAAM,CAACwB,GAAG;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAACsC,IAAA,GALID,WAAW;AAOjB,MAAME,gBAAgB,GAAG/D,MAAM,CAACoB,MAAM,CAAC;AACvC;AACA,CAAC;AAAC4C,IAAA,GAFID,gBAAgB;AAItB,MAAME,WAAW,GAAGjE,MAAM,CAACoB,MAAM,CAAC;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}